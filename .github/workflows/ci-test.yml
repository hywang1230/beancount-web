name: CI测试

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11]

    steps:
    - name: Checkout代码
      uses: actions/checkout@v4

    - name: 设置Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: 安装后端依赖
      run: |
        cd backend
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-asyncio pytest-cov

    - name: 代码格式检查
      run: |
        cd backend
        pip install black isort flake8
        black --check .
        isort --check-only .
        flake8 .

    - name: 运行后端测试
      run: |
        cd backend
        pytest --cov=app --cov-report=xml

    - name: 上传测试覆盖率
      uses: codecov/codecov-action@v3
      if: matrix.python-version == '3.11'
      with:
        file: ./backend/coverage.xml
        flags: backend

  test-frontend:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18, 20]

    steps:
    - name: Checkout代码
      uses: actions/checkout@v4

    - name: 设置Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: 安装前端依赖
      run: |
        cd frontend
        npm ci

    - name: 代码检查
      run: |
        cd frontend
        npm run lint

    - name: 构建前端
      run: |
        cd frontend
        npm run build

    - name: 运行前端测试
      run: |
        cd frontend
        # npm run test  # 如果有测试的话

  docker-build-test:
    runs-on: ubuntu-latest
    needs: [test-backend, test-frontend]
    
    steps:
    - name: Checkout代码
      uses: actions/checkout@v4

    - name: 设置Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: 构建Docker镜像测试
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: false
        tags: beancount-web:test
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: 测试Docker镜像
      run: |
        docker run -d --name test-container -p 8000:8000 beancount-web:test
        sleep 30
        curl -f http://localhost:8000/health || exit 1
        docker stop test-container 